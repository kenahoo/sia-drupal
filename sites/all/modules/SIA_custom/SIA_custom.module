<?php

require_once 'sites/all/modules/civicrm/api/class.api.php';

/**
 * Implements hook_menu().
 * See http://realtidings.com/blog/12/Apr/26/drupal-commerce-custom-add-cart-link .
 */
function SIA_custom_menu() {
  $items['product/add/%/%'] =
    array(
	  'page callback' => 'SIA_custom_product_add',
	  'page arguments' => array(2,3),  # items 2 & 3 of the path, which come from the '%' components.
	  'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	 );

  $items['donation/add'] =
    array(
	  'page callback' => 'SIA_custom_donation_add',
	  #'page arguments' => array(2),  # item 2 of the path, which comes from the '%' components.
	  'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	 );

  return $items;
}

/**
 * Custom function to add donation to a cart
 */
function SIA_custom_donation_add($amount=1, $tribute='') {
  $product = commerce_product_load(9);
  $line_item = commerce_product_line_item_new($product, 1);

  $line_item_wrapper = entity_metadata_wrapper('commerce_line_item', $line_item);
  $line_item_wrapper->commerce_unit_price->amount = 100*$amount; #$amount;
  commerce_line_item_rebase_unit_price($line_item_wrapper->value());
  commerce_line_item_save($line_item_wrapper->value());
  $line_item->field_donation_is_a_tribute_t[] = $tribute;

  global $user;
  $line_item = commerce_cart_product_add($user->uid, $line_item, FALSE);
  drupal_goto('cart');
}

/**
 * Custom function to add product(s) to a cart by product id
 */
function SIA_custom_product_add($pid,$quantity=1) {
  if ($product = commerce_product_load($pid) ) {
    global $user;
    $uid = $user->uid;
    $line_item = commerce_product_line_item_new($product, $quantity);
    $line_item->field_ticket_type['und'][]['value'] = 0;
    $line_item = commerce_cart_product_add($uid, $line_item, FALSE);
    drupal_goto('cart');
  }
}

function collapsible($title, $content, $collapsed=true) {
    return theme('ctools_collapsible', array('handle'=>$title, 'content'=>$content, 'collapsed'=>$collapsed));
}

function treatTable($title, $collapsed, $tab) {
    $content = theme('table', array('header'=> array("Date", "Bringer"), 'rows'=>$tab));
    print( collapsible($title, $content, $collapsed) );
    print( '<br clear="both" />' );
}

function ticketLine($desc, $id, $reserved) {
  $content = '<td style="text-align:right">'.$desc.'<br><span style="font-size:smaller">';
  $content .= $reserved ? 'Seats front &amp; center, held until showtime' : 'General admission';
  $content .= "</span></td>\n";
  $content .= '<td><a href="/product/add/'.$id.'/1"><img src="/graphics/add-to-cart.png"></a></td>';
  return $content;
}


getid3_load();

## Voice-part index
function vp_index($a) {
    $vp_order = array('soprano' => 1, 'alto' => 2, 'tenor' => 3, 'bass' => 4);
    $a = preg_replace("/ .*/", "", $a);
    $out = $vp_order[ strtolower($a) ];
    return $out;
}

## Voice-part sort
function vp_sort($a, $b) {
    $res = vp_index($a) - vp_index($b);
    if ($res) return $res;
    return strcmp($a, $b);
}


function listMP3s($files, $print=true) {
  $getID3 = new getID3;

  $result = '';

  foreach ($files as $d) {
    $f1 = preg_replace('/.*\//', '', $d);
    if (!is_dir($d)) {
      continue;
    }
    $result .= "<h3>$f1</h3>\n<ol>\n";

    $filenum = 0;
    foreach (glob("$d/*.[Mm][Pp]3") as $p) {
      $f = basename($p);
      if (!is_file($p)){
        continue;
      }
      $filenum++;

      $mp3info = $getID3->analyze($p);
      $tags = array_key_exists('tags', $mp3info) ? $mp3info['tags']['id3v2'] : array();
      $title = (array_key_exists('title',$tags) && $tags['title'][0]) ? $tags['title'][0] : "<i>$f</i>";
      $composer = (array_key_exists('composer',$tags) && $tags['composer'][0]) ?
          "<span style='font-size:smaller'>[".$tags['composer'][0]."]</span> " :
          "";
      $result .= ("<li> <a href=\"/$p\">$title</a> $composer" .
        "(".round($mp3info["filesize"]/pow(2,20), 1)."M, ".$mp3info["playtime_string"].")\n");
    }
    $result .= "</ol>\n";
  }
  if ($print) {
      print($result);
  } else {
      return($result);
  }
}

function mp3_listing($start, $end, $title, $collapsed=true) {

  $to_list = array();
  foreach (array_reverse(glob('reh/[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]')) as $d) {
    $f1 = preg_replace('/reh\//', '', $d);
    if (!is_dir($d) || strcmp($f1, $start)<0 || strcmp($f1, $end)>0) {
      continue;
    }
    $to_list[] = $d;
  }
  $content = listMP3s($to_list, false);

  print( collapsible($title, $content, $collapsed) );
}

function google_cal_list($start_date) {
  set_include_path('.:/usr/local/php5/lib/php:/usr/local/lib/php:../downloads/ZendGdata-1.9.3PL1/library');
  require_once 'Zend/Loader.php';
  Zend_Loader::loadClass('Zend_Gdata');
  Zend_Loader::loadClass('Zend_Gdata_AuthSub');
  Zend_Loader::loadClass('Zend_Gdata_ClientLogin');
  Zend_Loader::loadClass('Zend_Gdata_Calendar');

  $gdataCal = new Zend_Gdata_Calendar();
  $query = $gdataCal->newEventQuery();

  // http://www.google.com/calendar/feeds/udeua73r967urub9mdtghfcgn0%40group.calendar.google.com/private-a4fc1e96338f3f32412dacb922ba1823/basic
  $query->setUser('udeua73r967urub9mdtghfcgn0@group.calendar.google.com');
  $query->setVisibility('private-a4fc1e96338f3f32412dacb922ba1823');
  $query->setProjection('full');

  $query->setOrderby('starttime');
  $query->setMaxResults(500);
  $query->setSortorder('ascending');
  $query->setParam('singleevents','true');  # Expand recurrences

  $rows = array();
  $header = array('Day', 'Date', 'Time', 'What', 'Where', 'Notes');

  $eventFeed = $gdataCal->getCalendarEventFeed($query);

  foreach ($eventFeed as $event) {

    $cells = array();

    $when = $event->when[0];
    $d1=new DateTime($when->startTime);
    $d2=new DateTime($when->endTime);
    if ($d1 < $start_date) {
      continue ; }

    $cells[] = $d1->format('D');
    $cells[] = $d1->format('M j, Y');
    $cells[] = $d1->format('g:i').substr($d1->format('a'),0,1)." - ".$d2->format('g:i').substr($d1->format('a'),0,1);
    $cells[] = $event->title->text;

    $where = $event->where[0];
    $where = preg_replace("/Mayflower Congregational Church/", "Mayflower", $where);
    $where = preg_replace("/University Lutheran Church of Hope/", "ULCH", $where);
    $cells[] = array(data => $where, width => "20%");

    $notes = $event->content;
    $notes = preg_replace("/Singers in Accord rehearsal with Dr. Michael McGaghie for May concerts./i", "", $notes);
    $cells[] = array(data => $notes, width => "20%");

    $rows[] = $cells;
  }

  return array('header'=>$header, 'rows'=>$rows);
}


//# Don't close with ?>
